{
	"id": "0e35e13903364ffa7c4c075be03bfe69",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"project/contract simple.sol": {
				"content": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract MyToken {\r\n    //this creates an array with all balances\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    //initializes contract with initial supply tokens to the creator of the contract\r\n    constructor(uint initialSupply) public {\r\n        balanceOf[msg.sender] = initialSupply;\r\n    }\r\n\r\n    // Send coins\r\n    function transfert(address _to, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);            //Check if the sender has enough\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);  //Check for overflows\r\n        balanceOf[msg.sender] -= _value;                     //Subtract from the sender\r\n        balanceOf[_to] += _value;                            //Add the same to the recipient\r\n        return true;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"project/contract simple.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfert",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"project/contract simple.sol\":36:842  contract MyToken {\r... */\n  mstore(0x40, 0x80)\n    /* \"project/contract simple.sol\":247:342  constructor(uint initialSupply) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"project/contract simple.sol\":247:342  constructor(uint initialSupply) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"project/contract simple.sol\":247:342  constructor(uint initialSupply) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"project/contract simple.sol\":321:334  initialSupply */\n  dup1\n    /* \"project/contract simple.sol\":297:306  balanceOf */\n  0x00\n    /* \"project/contract simple.sol\":297:318  balanceOf[msg.sender] */\n  dup1\n    /* \"project/contract simple.sol\":307:317  msg.sender */\n  caller\n    /* \"project/contract simple.sol\":297:318  balanceOf[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"project/contract simple.sol\":297:334  balanceOf[msg.sender] = initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"project/contract simple.sol\":247:342  constructor(uint initialSupply) public {\r... */\n  pop\n    /* \"project/contract simple.sol\":36:842  contract MyToken {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"project/contract simple.sol\":36:842  contract MyToken {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"project/contract simple.sol\":36:842  contract MyToken {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4362c116\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"project/contract simple.sol\":369:839  function transfert(address _to, uint256 _value) public returns (bool success) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_6:\n        /* \"project/contract simple.sol\":369:839  function transfert(address _to, uint256 _value) public returns (bool success) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project/contract simple.sol\":107:152  mapping (address => uint256) public balanceOf */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"project/contract simple.sol\":107:152  mapping (address => uint256) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project/contract simple.sol\":369:839  function transfert(address _to, uint256 _value) public returns (bool success) {\r... */\n    tag_7:\n        /* \"project/contract simple.sol\":433:445  bool success */\n      0x00\n        /* \"project/contract simple.sol\":491:497  _value */\n      dup2\n        /* \"project/contract simple.sol\":466:475  balanceOf */\n      0x00\n        /* \"project/contract simple.sol\":466:487  balanceOf[msg.sender] */\n      dup1\n        /* \"project/contract simple.sol\":476:486  msg.sender */\n      caller\n        /* \"project/contract simple.sol\":466:487  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/contract simple.sol\":466:497  balanceOf[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"project/contract simple.sol\":458:498  require(balanceOf[msg.sender] >= _value) */\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n        /* \"project/contract simple.sol\":588:597  balanceOf */\n      0x00\n        /* \"project/contract simple.sol\":588:602  balanceOf[_to] */\n      dup1\n        /* \"project/contract simple.sol\":598:601  _to */\n      dup5\n        /* \"project/contract simple.sol\":588:602  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/contract simple.sol\":578:584  _value */\n      dup3\n        /* \"project/contract simple.sol\":561:570  balanceOf */\n      0x00\n        /* \"project/contract simple.sol\":561:575  balanceOf[_to] */\n      dup1\n        /* \"project/contract simple.sol\":571:574  _to */\n      dup7\n        /* \"project/contract simple.sol\":561:575  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"project/contract simple.sol\":561:584  balanceOf[_to] + _value */\n      add\n        /* \"project/contract simple.sol\":561:602  balanceOf[_to] + _value >= balanceOf[_to] */\n      lt\n      iszero\n        /* \"project/contract simple.sol\":553:603  require(balanceOf[_to] + _value >= balanceOf[_to]) */\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n        /* \"project/contract simple.sol\":662:668  _value */\n      dup2\n        /* \"project/contract simple.sol\":637:646  balanceOf */\n      0x00\n        /* \"project/contract simple.sol\":637:658  balanceOf[msg.sender] */\n      dup1\n        /* \"project/contract simple.sol\":647:657  msg.sender */\n      caller\n        /* \"project/contract simple.sol\":637:658  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"project/contract simple.sol\":637:668  balanceOf[msg.sender] -= _value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"project/contract simple.sol\":744:750  _value */\n      dup2\n        /* \"project/contract simple.sol\":726:735  balanceOf */\n      0x00\n        /* \"project/contract simple.sol\":726:740  balanceOf[_to] */\n      dup1\n        /* \"project/contract simple.sol\":736:739  _to */\n      dup6\n        /* \"project/contract simple.sol\":726:740  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"project/contract simple.sol\":726:750  balanceOf[_to] += _value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"project/contract simple.sol\":827:831  true */\n      0x01\n        /* \"project/contract simple.sol\":820:831  return true */\n      swap1\n      pop\n        /* \"project/contract simple.sol\":369:839  function transfert(address _to, uint256 _value) public returns (bool success) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"project/contract simple.sol\":107:152  mapping (address => uint256) public balanceOf */\n    tag_10:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820a30474a4e5976da7fe7ac7ebf2c34162cdf56c4a3f7ebe36e53d9f413498940364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103573803806103578339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506102c0806100976000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634362c1161461003b57806370a08231146100a1575b600080fd5b6100876004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506100f9565b604051808215151515815260200191505060405180910390f35b6100e3600480360360208110156100b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610273565b6040518082815260200191505060405180910390f35b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561014657600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156101d157600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506001905092915050565b6000602052806000526040600020600091509050548156fea265627a7a72315820a30474a4e5976da7fe7ac7ebf2c34162cdf56c4a3f7ebe36e53d9f413498940364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x357 CODESIZE SUB DUP1 PUSH2 0x357 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0x2C0 DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4362C116 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xA1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG3 DIV PUSH21 0xA4E5976DA7FE7AC7EBF2C34162CDF56C4A3F7EBE36 0xE5 RETURNDATASIZE SWAP16 COINBASE CALLVALUE SWAP9 SWAP5 SUB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:806:0:-;;;247:95;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:95:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;247:95:0;;;;;;;;;;;;;;;;321:13;297:9;:21;307:10;297:21;;;;;;;;;;;;;;;:37;;;;247:95;36:806;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80634362c1161461003b57806370a08231146100a1575b600080fd5b6100876004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506100f9565b604051808215151515815260200191505060405180910390f35b6100e3600480360360208110156100b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610273565b6040518082815260200191505060405180910390f35b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561014657600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156101d157600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506001905092915050565b6000602052806000526040600020600091509050548156fea265627a7a72315820a30474a4e5976da7fe7ac7ebf2c34162cdf56c4a3f7ebe36e53d9f413498940364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4362C116 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xA1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG3 DIV PUSH21 0xA4E5976DA7FE7AC7EBF2C34162CDF56C4A3F7EBE36 0xE5 RETURNDATASIZE SWAP16 COINBASE CALLVALUE SWAP9 SWAP5 SUB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:806:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36:806:0;;;;;;;;;;;;;;;;;;;;;;;;369:470;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;369:470:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;107:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;107:45:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;369:470;433:12;491:6;466:9;:21;476:10;466:21;;;;;;;;;;;;;;;;:31;;458:40;;;;;;588:9;:14;598:3;588:14;;;;;;;;;;;;;;;;578:6;561:9;:14;571:3;561:14;;;;;;;;;;;;;;;;:23;:41;;553:50;;;;;;662:6;637:9;:21;647:10;637:21;;;;;;;;;;;;;;;;:31;;;;;;;;;;;744:6;726:9;:14;736:3;726:14;;;;;;;;;;;;;;;;:24;;;;;;;;;;;827:4;820:11;;369:470;;;;:::o;107:45::-;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "140800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "1169",
								"transfert(address,uint256)": "44897"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 842,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "MSTORE"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "POP"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "MLOAD"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "PUSHSIZE"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "CODESIZE"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "SUB"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "DUP1"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "PUSHSIZE"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "DUP4"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "CODECOPY"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "DUP2"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "DUP2"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "ADD"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "DUP2"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "ADD"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "SWAP1"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "DUP1"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "DUP1"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "MLOAD"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "SWAP1"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "ADD"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "SWAP1"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "SWAP3"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "SWAP2"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "SWAP1"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "POP"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "POP"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "POP"
								},
								{
									"begin": 321,
									"end": 334,
									"name": "DUP1"
								},
								{
									"begin": 297,
									"end": 306,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "DUP1"
								},
								{
									"begin": 307,
									"end": 317,
									"name": "CALLER"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "AND"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "AND"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "DUP2"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "MSTORE"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "DUP2"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "MSTORE"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "ADD"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 297,
									"end": 318,
									"name": "KECCAK256"
								},
								{
									"begin": 297,
									"end": 334,
									"name": "DUP2"
								},
								{
									"begin": 297,
									"end": 334,
									"name": "SWAP1"
								},
								{
									"begin": 297,
									"end": 334,
									"name": "SSTORE"
								},
								{
									"begin": 297,
									"end": 334,
									"name": "POP"
								},
								{
									"begin": 247,
									"end": 342,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "CODECOPY"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 842,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a30474a4e5976da7fe7ac7ebf2c34162cdf56c4a3f7ebe36e53d9f413498940364736f6c63430005110032",
									".code": [
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "SHR"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "4362C116"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 842,
											"name": "REVERT"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP3"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP3"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP3"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ISZERO"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ISZERO"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ISZERO"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ISZERO"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "MSTORE"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SUB"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "RETURN"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP2"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "AND"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP3"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "MLOAD"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP3"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP2"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "MLOAD"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SUB"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "RETURN"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 486,
											"name": "CALLER"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "AND"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "AND"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "KECCAK256"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "SLOAD"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "LT"
										},
										{
											"begin": 466,
											"end": 497,
											"name": "ISZERO"
										},
										{
											"begin": 458,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 458,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 458,
											"end": 498,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 458,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 458,
											"end": 498,
											"name": "REVERT"
										},
										{
											"begin": 458,
											"end": 498,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 458,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 588,
											"end": 597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 598,
											"end": 601,
											"name": "DUP5"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "AND"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "AND"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "KECCAK256"
										},
										{
											"begin": 588,
											"end": 602,
											"name": "SLOAD"
										},
										{
											"begin": 578,
											"end": 584,
											"name": "DUP3"
										},
										{
											"begin": 561,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 574,
											"name": "DUP7"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "AND"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "AND"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "MSTORE"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "ADD"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "SWAP1"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "MSTORE"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "ADD"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "KECCAK256"
										},
										{
											"begin": 561,
											"end": 575,
											"name": "SLOAD"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "ADD"
										},
										{
											"begin": 561,
											"end": 602,
											"name": "LT"
										},
										{
											"begin": 561,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 553,
											"end": 603,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 553,
											"end": 603,
											"name": "JUMPI"
										},
										{
											"begin": 553,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 553,
											"end": 603,
											"name": "DUP1"
										},
										{
											"begin": 553,
											"end": 603,
											"name": "REVERT"
										},
										{
											"begin": 553,
											"end": 603,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 553,
											"end": 603,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 668,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP1"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "CALLER"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "KECCAK256"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "DUP3"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "DUP3"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "SLOAD"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "SUB"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "SWAP3"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "SSTORE"
										},
										{
											"begin": 637,
											"end": 668,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "DUP1"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP6"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "AND"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "AND"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "MSTORE"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "MSTORE"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "KECCAK256"
										},
										{
											"begin": 726,
											"end": 740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "SLOAD"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "SWAP3"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "SSTORE"
										},
										{
											"begin": 726,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 820,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 831,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP3"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 839,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "KECCAK256"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "SLOAD"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "DUP2"
										},
										{
											"begin": 107,
											"end": 152,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfert(address,uint256)": "4362c116"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfert\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project/contract simple.sol\":\"MyToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project/contract simple.sol\":{\"keccak256\":\"0x94ccc5b1a3fe1237a74c31dd38ab15552c306d34b014c8c44cdfa4d1e55d900b\",\"urls\":[\"bzz-raw://0cc4d0d8d6c23db9063efbd0eb38222bfc42026a0987ab861ff976baf0191446\",\"dweb:/ipfs/QmeX5DAHVjeQRDyyreNGb58WM1z3jRTk3w8RQN6xFirVXp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "project/contract simple.sol:MyToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"project/contract simple.sol": {
				"ast": {
					"absolutePath": "project/contract simple.sol",
					"exportedSymbols": {
						"MyToken": [
							65
						]
					},
					"id": 66,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 65,
							"linearizedBaseContracts": [
								65
							],
							"name": "MyToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 65,
									"src": "107:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "107:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "127:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "286:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 10,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "297:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 13,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 11,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "307:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "307:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "297:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 14,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "321:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "297:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "297:37:0"
											}
										]
									},
									"documentation": null,
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "259:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "259:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "258:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:0:0"
									},
									"scope": 65,
									"src": "247:95:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "447:392:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 28,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "466:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 31,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 29,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "476:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "476:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "466:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 32,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "491:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "466:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															83,
															84
														],
														"referencedDeclaration": 83,
														"src": "458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "458:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "458:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 37,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "561:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 39,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 38,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "571:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "561:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 40,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "578:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "561:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 42,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "588:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 44,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 43,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "598:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "588:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "561:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															83,
															84
														],
														"referencedDeclaration": 83,
														"src": "553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "553:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "553:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 48,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "637:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 51,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "647:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "647:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "637:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 52,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "662:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "637:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "637:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 55,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "726:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 57,
														"indexExpression": {
															"argumentTypes": null,
															"id": 56,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "736:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "726:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 58,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "744:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "726:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "726:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "827:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 26,
												"id": 62,
												"nodeType": "Return",
												"src": "820:11:0"
											}
										]
									},
									"documentation": null,
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "388:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:29:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "433:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:14:0"
									},
									"scope": 65,
									"src": "369:470:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 66,
							"src": "36:806:0"
						}
					],
					"src": "0:842:0"
				},
				"id": 0
			}
		}
	}
}